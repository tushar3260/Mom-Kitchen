{
  "version": 3,
  "sources": ["../../localforage/dist/localforage.js"],
  "sourcesContent": ["/*!\r\n    localForage -- Offline Storage, Improved\r\n    Version 1.10.0\r\n    https://localforage.github.io/localForage\r\n    (c) 2013-2017 Mozilla, Apache License 2.0\r\n*/\r\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\r\n(function (global){\r\n'use strict';\r\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\r\n\r\nvar scheduleDrain;\r\n\r\n{\r\n  if (Mutation) {\r\n    var called = 0;\r\n    var observer = new Mutation(nextTick);\r\n    var element = global.document.createTextNode('');\r\n    observer.observe(element, {\r\n      characterData: true\r\n    });\r\n    scheduleDrain = function () {\r\n      element.data = (called = ++called % 2);\r\n    };\r\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\r\n    var channel = new global.MessageChannel();\r\n    channel.port1.onmessage = nextTick;\r\n    scheduleDrain = function () {\r\n      channel.port2.postMessage(0);\r\n    };\r\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\r\n    scheduleDrain = function () {\r\n\r\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\r\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\r\n      var scriptEl = global.document.createElement('script');\r\n      scriptEl.onreadystatechange = function () {\r\n        nextTick();\r\n\r\n        scriptEl.onreadystatechange = null;\r\n        scriptEl.parentNode.removeChild(scriptEl);\r\n        scriptEl = null;\r\n      };\r\n      global.document.documentElement.appendChild(scriptEl);\r\n    };\r\n  } else {\r\n    scheduleDrain = function () {\r\n      setTimeout(nextTick, 0);\r\n    };\r\n  }\r\n}\r\n\r\nvar draining;\r\nvar queue = [];\r\n//named nextTick for less confusing stack traces\r\nfunction nextTick() {\r\n  draining = true;\r\n  var i, oldQueue;\r\n  var len = queue.length;\r\n  while (len) {\r\n    oldQueue = queue;\r\n    queue = [];\r\n    i = -1;\r\n    while (++i < len) {\r\n      oldQueue[i]();\r\n    }\r\n    len = queue.length;\r\n  }\r\n  draining = false;\r\n}\r\n\r\nmodule.exports = immediate;\r\nfunction immediate(task) {\r\n  if (queue.push(task) === 1 && !draining) {\r\n    scheduleDrain();\r\n  }\r\n}\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n},{}],2:[function(_dereq_,module,exports){\r\n'use strict';\r\nvar immediate = _dereq_(1);\r\n\r\n/* istanbul ignore next */\r\nfunction INTERNAL() {}\r\n\r\nvar handlers = {};\r\n\r\nvar REJECTED = ['REJECTED'];\r\nvar FULFILLED = ['FULFILLED'];\r\nvar PENDING = ['PENDING'];\r\n\r\nmodule.exports = Promise;\r\n\r\nfunction Promise(resolver) {\r\n  if (typeof resolver !== 'function') {\r\n    throw new TypeError('resolver must be a function');\r\n  }\r\n  this.state = PENDING;\r\n  this.queue = [];\r\n  this.outcome = void 0;\r\n  if (resolver !== INTERNAL) {\r\n    safelyResolveThenable(this, resolver);\r\n  }\r\n}\r\n\r\nPromise.prototype[\"catch\"] = function (onRejected) {\r\n  return this.then(null, onRejected);\r\n};\r\nPromise.prototype.then = function (onFulfilled, onRejected) {\r\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\r\n    typeof onRejected !== 'function' && this.state === REJECTED) {\r\n    return this;\r\n  }\r\n  var promise = new this.constructor(INTERNAL);\r\n  if (this.state !== PENDING) {\r\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\r\n    unwrap(promise, resolver, this.outcome);\r\n  } else {\r\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\r\n  }\r\n\r\n  return promise;\r\n};\r\nfunction QueueItem(promise, onFulfilled, onRejected) {\r\n  this.promise = promise;\r\n  if (typeof onFulfilled === 'function') {\r\n    this.onFulfilled = onFulfilled;\r\n    this.callFulfilled = this.otherCallFulfilled;\r\n  }\r\n  if (typeof onRejected === 'function') {\r\n    this.onRejected = onRejected;\r\n    this.callRejected = this.otherCallRejected;\r\n  }\r\n}\r\nQueueItem.prototype.callFulfilled = function (value) {\r\n  handlers.resolve(this.promise, value);\r\n};\r\nQueueItem.prototype.otherCallFulfilled = function (value) {\r\n  unwrap(this.promise, this.onFulfilled, value);\r\n};\r\nQueueItem.prototype.callRejected = function (value) {\r\n  handlers.reject(this.promise, value);\r\n};\r\nQueueItem.prototype.otherCallRejected = function (value) {\r\n  unwrap(this.promise, this.onRejected, value);\r\n};\r\n\r\nfunction unwrap(promise, func, value) {\r\n  immediate(function () {\r\n    var returnValue;\r\n    try {\r\n      returnValue = func(value);\r\n    } catch (e) {\r\n      return handlers.reject(promise, e);\r\n    }\r\n    if (returnValue === promise) {\r\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\r\n    } else {\r\n      handlers.resolve(promise, returnValue);\r\n    }\r\n  });\r\n}\r\n\r\nhandlers.resolve = function (self, value) {\r\n  var result = tryCatch(getThen, value);\r\n  if (result.status === 'error') {\r\n    return handlers.reject(self, result.value);\r\n  }\r\n  var thenable = result.value;\r\n\r\n  if (thenable) {\r\n    safelyResolveThenable(self, thenable);\r\n  } else {\r\n    self.state = FULFILLED;\r\n    self.outcome = value;\r\n    var i = -1;\r\n    var len = self.queue.length;\r\n    while (++i < len) {\r\n      self.queue[i].callFulfilled(value);\r\n    }\r\n  }\r\n  return self;\r\n};\r\nhandlers.reject = function (self, error) {\r\n  self.state = REJECTED;\r\n  self.outcome = error;\r\n  var i = -1;\r\n  var len = self.queue.length;\r\n  while (++i < len) {\r\n    self.queue[i].callRejected(error);\r\n  }\r\n  return self;\r\n};\r\n\r\nfunction getThen(obj) {\r\n  // Make sure we only access the accessor once as required by the spec\r\n  var then = obj && obj.then;\r\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\r\n    return function appyThen() {\r\n      then.apply(obj, arguments);\r\n    };\r\n  }\r\n}\r\n\r\nfunction safelyResolveThenable(self, thenable) {\r\n  // Either fulfill, reject or reject with error\r\n  var called = false;\r\n  function onError(value) {\r\n    if (called) {\r\n      return;\r\n    }\r\n    called = true;\r\n    handlers.reject(self, value);\r\n  }\r\n\r\n  function onSuccess(value) {\r\n    if (called) {\r\n      return;\r\n    }\r\n    called = true;\r\n    handlers.resolve(self, value);\r\n  }\r\n\r\n  function tryToUnwrap() {\r\n    thenable(onSuccess, onError);\r\n  }\r\n\r\n  var result = tryCatch(tryToUnwrap);\r\n  if (result.status === 'error') {\r\n    onError(result.value);\r\n  }\r\n}\r\n\r\nfunction tryCatch(func, value) {\r\n  var out = {};\r\n  try {\r\n    out.value = func(value);\r\n    out.status = 'success';\r\n  } catch (e) {\r\n    out.status = 'error';\r\n    out.value = e;\r\n  }\r\n  return out;\r\n}\r\n\r\nPromise.resolve = resolve;\r\nfunction resolve(value) {\r\n  if (value instanceof this) {\r\n    return value;\r\n  }\r\n  return handlers.resolve(new this(INTERNAL), value);\r\n}\r\n\r\nPromise.reject = reject;\r\nfunction reject(reason) {\r\n  var promise = new this(INTERNAL);\r\n  return handlers.reject(promise, reason);\r\n}\r\n\r\nPromise.all = all;\r\nfunction all(iterable) {\r\n  var self = this;\r\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\r\n    return this.reject(new TypeError('must be an array'));\r\n  }\r\n\r\n  var len = iterable.length;\r\n  var called = false;\r\n  if (!len) {\r\n    return this.resolve([]);\r\n  }\r\n\r\n  var values = new Array(len);\r\n  var resolved = 0;\r\n  var i = -1;\r\n  var promise = new this(INTERNAL);\r\n\r\n  while (++i < len) {\r\n    allResolver(iterable[i], i);\r\n  }\r\n  return promise;\r\n  function allResolver(value, i) {\r\n    self.resolve(value).then(resolveFromAll, function (error) {\r\n      if (!called) {\r\n        called = true;\r\n        handlers.reject(promise, error);\r\n      }\r\n    });\r\n    function resolveFromAll(outValue) {\r\n      values[i] = outValue;\r\n      if (++resolved === len && !called) {\r\n        called = true;\r\n        handlers.resolve(promise, values);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nPromise.race = race;\r\nfunction race(iterable) {\r\n  var self = this;\r\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\r\n    return this.reject(new TypeError('must be an array'));\r\n  }\r\n\r\n  var len = iterable.length;\r\n  var called = false;\r\n  if (!len) {\r\n    return this.resolve([]);\r\n  }\r\n\r\n  var i = -1;\r\n  var promise = new this(INTERNAL);\r\n\r\n  while (++i < len) {\r\n    resolver(iterable[i]);\r\n  }\r\n  return promise;\r\n  function resolver(value) {\r\n    self.resolve(value).then(function (response) {\r\n      if (!called) {\r\n        called = true;\r\n        handlers.resolve(promise, response);\r\n      }\r\n    }, function (error) {\r\n      if (!called) {\r\n        called = true;\r\n        handlers.reject(promise, error);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n},{\"1\":1}],3:[function(_dereq_,module,exports){\r\n(function (global){\r\n'use strict';\r\nif (typeof global.Promise !== 'function') {\r\n  global.Promise = _dereq_(2);\r\n}\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n},{\"2\":2}],4:[function(_dereq_,module,exports){\r\n'use strict';\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction getIDB() {\r\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\r\n    try {\r\n        if (typeof indexedDB !== 'undefined') {\r\n            return indexedDB;\r\n        }\r\n        if (typeof webkitIndexedDB !== 'undefined') {\r\n            return webkitIndexedDB;\r\n        }\r\n        if (typeof mozIndexedDB !== 'undefined') {\r\n            return mozIndexedDB;\r\n        }\r\n        if (typeof OIndexedDB !== 'undefined') {\r\n            return OIndexedDB;\r\n        }\r\n        if (typeof msIndexedDB !== 'undefined') {\r\n            return msIndexedDB;\r\n        }\r\n    } catch (e) {\r\n        return;\r\n    }\r\n}\r\n\r\nvar idb = getIDB();\r\n\r\nfunction isIndexedDBValid() {\r\n    try {\r\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\r\n        // if needed.\r\n        if (!idb || !idb.open) {\r\n            return false;\r\n        }\r\n        // We mimic PouchDB here;\r\n        //\r\n        // We test for openDatabase because IE Mobile identifies itself\r\n        // as Safari. Oh the lulz...\r\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\r\n\r\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\r\n\r\n        // Safari <10.1 does not meet our requirements for IDB support\r\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\r\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\r\n        // Note: this creates issues with `window.fetch` polyfills and\r\n        // overrides; see:\r\n        // https://github.com/localForage/localForage/issues/856\r\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\r\n        // some outdated implementations of IDB that appear on Samsung\r\n        // and HTC Android devices <4.4 are missing IDBKeyRange\r\n        // See: https://github.com/mozilla/localForage/issues/128\r\n        // See: https://github.com/mozilla/localForage/issues/272\r\n        typeof IDBKeyRange !== 'undefined';\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n}\r\n\r\n// Abstracts constructing a Blob object, so it also works in older\r\n// browsers that don't support the native Blob constructor. (i.e.\r\n// old QtWebKit versions, at least).\r\n// Abstracts constructing a Blob object, so it also works in older\r\n// browsers that don't support the native Blob constructor. (i.e.\r\n// old QtWebKit versions, at least).\r\nfunction createBlob(parts, properties) {\r\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\r\n    parts = parts || [];\r\n    properties = properties || {};\r\n    try {\r\n        return new Blob(parts, properties);\r\n    } catch (e) {\r\n        if (e.name !== 'TypeError') {\r\n            throw e;\r\n        }\r\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\r\n        var builder = new Builder();\r\n        for (var i = 0; i < parts.length; i += 1) {\r\n            builder.append(parts[i]);\r\n        }\r\n        return builder.getBlob(properties.type);\r\n    }\r\n}\r\n\r\n// This is CommonJS because lie is an external dependency, so Rollup\r\n// can just ignore it.\r\nif (typeof Promise === 'undefined') {\r\n    // In the \"nopromises\" build this will just throw if you don't have\r\n    // a global promise object, but it would throw anyway later.\r\n    _dereq_(3);\r\n}\r\nvar Promise$1 = Promise;\r\n\r\nfunction executeCallback(promise, callback) {\r\n    if (callback) {\r\n        promise.then(function (result) {\r\n            callback(null, result);\r\n        }, function (error) {\r\n            callback(error);\r\n        });\r\n    }\r\n}\r\n\r\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\r\n    if (typeof callback === 'function') {\r\n        promise.then(callback);\r\n    }\r\n\r\n    if (typeof errorCallback === 'function') {\r\n        promise[\"catch\"](errorCallback);\r\n    }\r\n}\r\n\r\nfunction normalizeKey(key) {\r\n    // Cast the key to a string, as that's all we can set as a key.\r\n    if (typeof key !== 'string') {\r\n        console.warn(key + ' used as a key, but it is not a string.');\r\n        key = String(key);\r\n    }\r\n\r\n    return key;\r\n}\r\n\r\nfunction getCallback() {\r\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\r\n        return arguments[arguments.length - 1];\r\n    }\r\n}\r\n\r\n// Some code originally from async_storage.js in\r\n// [Gaia](https://github.com/mozilla-b2g/gaia).\r\n\r\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\r\nvar supportsBlobs = void 0;\r\nvar dbContexts = {};\r\nvar toString = Object.prototype.toString;\r\n\r\n// Transaction Modes\r\nvar READ_ONLY = 'readonly';\r\nvar READ_WRITE = 'readwrite';\r\n\r\n// Transform a binary string to an array buffer, because otherwise\r\n// weird stuff happens when you try to work with the binary string directly.\r\n// It is known.\r\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\r\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\r\nfunction _binStringToArrayBuffer(bin) {\r\n    var length = bin.length;\r\n    var buf = new ArrayBuffer(length);\r\n    var arr = new Uint8Array(buf);\r\n    for (var i = 0; i < length; i++) {\r\n        arr[i] = bin.charCodeAt(i);\r\n    }\r\n    return buf;\r\n}\r\n\r\n//\r\n// Blobs are not supported in all versions of IndexedDB, notably\r\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\r\n//\r\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\r\n// Detecting them is expensive and confusing to users, and Chrome 37-42\r\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\r\n//\r\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\r\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\r\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\r\n//\r\n// Code borrowed from PouchDB. See:\r\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\r\n//\r\nfunction _checkBlobSupportWithoutCaching(idb) {\r\n    return new Promise$1(function (resolve) {\r\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\r\n        var blob = createBlob(['']);\r\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\r\n\r\n        txn.onabort = function (e) {\r\n            // If the transaction aborts now its due to not being able to\r\n            // write to the database, likely due to the disk being full\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            resolve(false);\r\n        };\r\n\r\n        txn.oncomplete = function () {\r\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\r\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\r\n            // MS Edge pretends to be Chrome 42:\r\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\r\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\r\n        };\r\n    })[\"catch\"](function () {\r\n        return false; // error, so assume unsupported\r\n    });\r\n}\r\n\r\nfunction _checkBlobSupport(idb) {\r\n    if (typeof supportsBlobs === 'boolean') {\r\n        return Promise$1.resolve(supportsBlobs);\r\n    }\r\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\r\n        supportsBlobs = value;\r\n        return supportsBlobs;\r\n    });\r\n}\r\n\r\nfunction _deferReadiness(dbInfo) {\r\n    var dbContext = dbContexts[dbInfo.name];\r\n\r\n    // Create a deferred object representing the current database operation.\r\n    var deferredOperation = {};\r\n\r\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\r\n        deferredOperation.resolve = resolve;\r\n        deferredOperation.reject = reject;\r\n    });\r\n\r\n    // Enqueue the deferred operation.\r\n    dbContext.deferredOperations.push(deferredOperation);\r\n\r\n    // Chain its promise to the database readiness.\r\n    if (!dbContext.dbReady) {\r\n        dbContext.dbReady = deferredOperation.promise;\r\n    } else {\r\n        dbContext.dbReady = dbContext.dbReady.then(function () {\r\n            return deferredOperation.promise;\r\n        });\r\n    }\r\n}\r\n\r\nfunction _advanceReadiness(dbInfo) {\r\n    var dbContext = dbContexts[dbInfo.name];\r\n\r\n    // Dequeue a deferred operation.\r\n    var deferredOperation = dbContext.deferredOperations.pop();\r\n\r\n    // Resolve its promise (which is part of the database readiness\r\n    // chain of promises).\r\n    if (deferredOperation) {\r\n        deferredOperation.resolve();\r\n        return deferredOperation.promise;\r\n    }\r\n}\r\n\r\nfunction _rejectReadiness(dbInfo, err) {\r\n    var dbContext = dbContexts[dbInfo.name];\r\n\r\n    // Dequeue a deferred operation.\r\n    var deferredOperation = dbContext.deferredOperations.pop();\r\n\r\n    // Reject its promise (which is part of the database readiness\r\n    // chain of promises).\r\n    if (deferredOperation) {\r\n        deferredOperation.reject(err);\r\n        return deferredOperation.promise;\r\n    }\r\n}\r\n\r\nfunction _getConnection(dbInfo, upgradeNeeded) {\r\n    return new Promise$1(function (resolve, reject) {\r\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\r\n\r\n        if (dbInfo.db) {\r\n            if (upgradeNeeded) {\r\n                _deferReadiness(dbInfo);\r\n                dbInfo.db.close();\r\n            } else {\r\n                return resolve(dbInfo.db);\r\n            }\r\n        }\r\n\r\n        var dbArgs = [dbInfo.name];\r\n\r\n        if (upgradeNeeded) {\r\n            dbArgs.push(dbInfo.version);\r\n        }\r\n\r\n        var openreq = idb.open.apply(idb, dbArgs);\r\n\r\n        if (upgradeNeeded) {\r\n            openreq.onupgradeneeded = function (e) {\r\n                var db = openreq.result;\r\n                try {\r\n                    db.createObjectStore(dbInfo.storeName);\r\n                    if (e.oldVersion <= 1) {\r\n                        // Added when support for blob shims was added\r\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\r\n                    }\r\n                } catch (ex) {\r\n                    if (ex.name === 'ConstraintError') {\r\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\r\n                    } else {\r\n                        throw ex;\r\n                    }\r\n                }\r\n            };\r\n        }\r\n\r\n        openreq.onerror = function (e) {\r\n            e.preventDefault();\r\n            reject(openreq.error);\r\n        };\r\n\r\n        openreq.onsuccess = function () {\r\n            var db = openreq.result;\r\n            db.onversionchange = function (e) {\r\n                // Triggered when the database is modified (e.g. adding an objectStore) or\r\n                // deleted (even when initiated by other sessions in different tabs).\r\n                // Closing the connection here prevents those operations from being blocked.\r\n                // If the database is accessed again later by this instance, the connection\r\n                // will be reopened or the database recreated as needed.\r\n                e.target.close();\r\n            };\r\n            resolve(db);\r\n            _advanceReadiness(dbInfo);\r\n        };\r\n    });\r\n}\r\n\r\nfunction _getOriginalConnection(dbInfo) {\r\n    return _getConnection(dbInfo, false);\r\n}\r\n\r\nfunction _getUpgradedConnection(dbInfo) {\r\n    return _getConnection(dbInfo, true);\r\n}\r\n\r\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\r\n    if (!dbInfo.db) {\r\n        return true;\r\n    }\r\n\r\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\r\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\r\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\r\n\r\n    if (isDowngrade) {\r\n        // If the version is not the default one\r\n        // then warn for impossible downgrade.\r\n        if (dbInfo.version !== defaultVersion) {\r\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\r\n        }\r\n        // Align the versions to prevent errors.\r\n        dbInfo.version = dbInfo.db.version;\r\n    }\r\n\r\n    if (isUpgrade || isNewStore) {\r\n        // If the store is new then increment the version (if needed).\r\n        // This will trigger an \"upgradeneeded\" event which is required\r\n        // for creating a store.\r\n        if (isNewStore) {\r\n            var incVersion = dbInfo.db.version + 1;\r\n            if (incVersion > dbInfo.version) {\r\n                dbInfo.version = incVersion;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n// encode a blob for indexeddb engines that don't support blobs\r\nfunction _encodeBlob(blob) {\r\n    return new Promise$1(function (resolve, reject) {\r\n        var reader = new FileReader();\r\n        reader.onerror = reject;\r\n        reader.onloadend = function (e) {\r\n            var base64 = btoa(e.target.result || '');\r\n            resolve({\r\n                __local_forage_encoded_blob: true,\r\n                data: base64,\r\n                type: blob.type\r\n            });\r\n        };\r\n        reader.readAsBinaryString(blob);\r\n    });\r\n}\r\n\r\n// decode an encoded blob\r\nfunction _decodeBlob(encodedBlob) {\r\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\r\n    return createBlob([arrayBuff], { type: encodedBlob.type });\r\n}\r\n\r\n// is this one of our fancy encoded blobs?\r\nfunction _isEncodedBlob(value) {\r\n    return value && value.__local_forage_encoded_blob;\r\n}\r\n\r\n// Specialize the default `ready()` function by making it dependent\r\n// on the current database operations. Thus, the driver will be actually\r\n// ready when it's been initialized (default) *and* there are no pending\r\n// operations on the database (initiated by some other instances).\r\nfunction _fullyReady(callback) {\r\n    var self = this;\r\n\r\n    var promise = self._initReady().then(function () {\r\n        var dbContext = dbContexts[self._dbInfo.name];\r\n\r\n        if (dbContext && dbContext.dbReady) {\r\n            return dbContext.dbReady;\r\n        }\r\n    });\r\n\r\n    executeTwoCallbacks(promise, callback, callback);\r\n    return promise;\r\n}\r\n\r\n// Try to establish a new db connection to replace the\r\n// current one which is broken (i.e. experiencing\r\n// InvalidStateError while creating a transaction).\r\nfunction _tryReconnect(dbInfo) {\r\n    _deferReadiness(dbInfo);\r\n\r\n    var dbContext = dbContexts[dbInfo.name];\r\n    var forages = dbContext.forages;\r\n\r\n    for (var i = 0; i < forages.length; i++) {\r\n        var forage = forages[i];\r\n        if (forage._dbInfo.db) {\r\n            forage._dbInfo.db.close();\r\n            forage._dbInfo.db = null;\r\n        }\r\n    }\r\n    dbInfo.db = null;\r\n\r\n    return _getOriginalConnection(dbInfo).then(function (db) {\r\n        dbInfo.db = db;\r\n        if (_isUpgradeNeeded(dbInfo)) {\r\n            // Reopen the database for upgrading.\r\n            return _getUpgradedConnection(dbInfo);\r\n        }\r\n        return db;\r\n    }).then(function (db) {\r\n        // store the latest db reference\r\n        // in case the db was upgraded\r\n        dbInfo.db = dbContext.db = db;\r\n        for (var i = 0; i < forages.length; i++) {\r\n            forages[i]._dbInfo.db = db;\r\n        }\r\n    })[\"catch\"](function (err) {\r\n        _rejectReadiness(dbInfo, err);\r\n        throw err;\r\n    });\r\n}\r\n\r\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\r\n// so we have to do it with callbacks\r\nfunction createTransaction(dbInfo, mode, callback, retries) {\r\n    if (retries === undefined) {\r\n        retries = 1;\r\n    }\r\n\r\n    try {\r\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\r\n        callback(null, tx);\r\n    } catch (err) {\r\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\r\n            return Promise$1.resolve().then(function () {\r\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\r\n                    // increase the db version, to create the new ObjectStore\r\n                    if (dbInfo.db) {\r\n                        dbInfo.version = dbInfo.db.version + 1;\r\n                    }\r\n                    // Reopen the database for upgrading.\r\n                    return _getUpgradedConnection(dbInfo);\r\n                }\r\n            }).then(function () {\r\n                return _tryReconnect(dbInfo).then(function () {\r\n                    createTransaction(dbInfo, mode, callback, retries - 1);\r\n                });\r\n            })[\"catch\"](callback);\r\n        }\r\n\r\n        callback(err);\r\n    }\r\n}\r\n\r\nfunction createDbContext() {\r\n    return {\r\n        // Running localForages sharing a database.\r\n        forages: [],\r\n        // Shared database.\r\n        db: null,\r\n        // Database readiness (promise).\r\n        dbReady: null,\r\n        // Deferred operations on the database.\r\n        deferredOperations: []\r\n    };\r\n}\r\n\r\n// Open the IndexedDB database (automatically creates one if one didn't\r\n// previously exist), using any options set in the config.\r\nfunction _initStorage(options) {\r\n    var self = this;\r\n    var dbInfo = {\r\n        db: null\r\n    };\r\n\r\n    if (options) {\r\n        for (var i in options) {\r\n            dbInfo[i] = options[i];\r\n        }\r\n    }\r\n\r\n    // Get the current context of the database;\r\n    var dbContext = dbContexts[dbInfo.name];\r\n\r\n    // ...or create a new context.\r\n    if (!dbContext) {\r\n        dbContext = createDbContext();\r\n        // Register the new context in the global container.\r\n        dbContexts[dbInfo.name] = dbContext;\r\n    }\r\n\r\n    // Register itself as a running localForage in the current context.\r\n    dbContext.forages.push(self);\r\n\r\n    // Replace the default `ready()` function with the specialized one.\r\n    if (!self._initReady) {\r\n        self._initReady = self.ready;\r\n        self.ready = _fullyReady;\r\n    }\r\n\r\n    // Create an array of initialization states of the related localForages.\r\n    var initPromises = [];\r\n\r\n    function ignoreErrors() {\r\n        // Don't handle errors here,\r\n        // just makes sure related localForages aren't pending.\r\n        return Promise$1.resolve();\r\n    }\r\n\r\n    for (var j = 0; j < dbContext.forages.length; j++) {\r\n        var forage = dbContext.forages[j];\r\n        if (forage !== self) {\r\n            // Don't wait for itself...\r\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\r\n        }\r\n    }\r\n\r\n    // Take a snapshot of the related localForages.\r\n    var forages = dbContext.forages.slice(0);\r\n\r\n    // Initialize the connection process only when\r\n    // all the related localForages aren't pending.\r\n    return Promise$1.all(initPromises).then(function () {\r\n        dbInfo.db = dbContext.db;\r\n        // Get the connection or open a new one without upgrade.\r\n        return _getOriginalConnection(dbInfo);\r\n    }).then(function (db) {\r\n        dbInfo.db = db;\r\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\r\n            // Reopen the database for upgrading.\r\n            return _getUpgradedConnection(dbInfo);\r\n        }\r\n        return db;\r\n    }).then(function (db) {\r\n        dbInfo.db = dbContext.db = db;\r\n        self._dbInfo = dbInfo;\r\n        // Share the final connection amongst related localForages.\r\n        for (var k = 0; k < forages.length; k++) {\r\n            var forage = forages[k];\r\n            if (forage !== self) {\r\n                // Self is already up-to-date.\r\n                forage._dbInfo.db = dbInfo.db;\r\n                forage._dbInfo.version = dbInfo.version;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction getItem(key, callback) {\r\n    var self = this;\r\n\r\n    key = normalizeKey(key);\r\n\r\n    var promise = new Promise$1(function (resolve, reject) {\r\n        self.ready().then(function () {\r\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\r\n                if (err) {\r\n                    return reject(err);\r\n                }\r\n\r\n                try {\r\n                    var store = transaction.objectStore(self._dbInfo.storeName);\r\n                    var req = store.get(key);\r\n\r\n                    req.onsuccess = function () {\r\n                        var value = req.result;\r\n                        if (value === undefined) {\r\n                            value = null;\r\n                        }\r\n                        if (_isEncodedBlob(value)) {\r\n                            value = _decodeBlob(value);\r\n                        }\r\n                        resolve(value);\r\n                    };\r\n\r\n                    req.onerror = function () {\r\n                        reject(req.error);\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            });\r\n        })[\"catch\"](reject);\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\n// Iterate over all items stored in database.\r\nfunction iterate(iterator, callback) {\r\n    var self = this;\r\n\r\n    var promise = new Promise$1(function (resolve, reject) {\r\n        self.ready().then(function () {\r\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\r\n                if (err) {\r\n                    return reject(err);\r\n                }\r\n\r\n                try {\r\n                    var store = transaction.objectStore(self._dbInfo.storeName);\r\n                    var req = store.openCursor();\r\n                    var iterationNumber = 1;\r\n\r\n                    req.onsuccess = function () {\r\n                        var cursor = req.result;\r\n\r\n                        if (cursor) {\r\n                            var value = cursor.value;\r\n                            if (_isEncodedBlob(value)) {\r\n                                value = _decodeBlob(value);\r\n                            }\r\n                            var result = iterator(value, cursor.key, iterationNumber++);\r\n\r\n                            // when the iterator callback returns any\r\n                            // (non-`undefined`) value, then we stop\r\n                            // the iteration immediately\r\n                            if (result !== void 0) {\r\n                                resolve(result);\r\n                            } else {\r\n                                cursor[\"continue\"]();\r\n                            }\r\n                        } else {\r\n                            resolve();\r\n                        }\r\n                    };\r\n\r\n                    req.onerror = function () {\r\n                        reject(req.error);\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            });\r\n        })[\"catch\"](reject);\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n\r\n    return promise;\r\n}\r\n\r\nfunction setItem(key, value, callback) {\r\n    var self = this;\r\n\r\n    key = normalizeKey(key);\r\n\r\n    var promise = new Promise$1(function (resolve, reject) {\r\n        var dbInfo;\r\n        self.ready().then(function () {\r\n            dbInfo = self._dbInfo;\r\n            if (toString.call(value) === '[object Blob]') {\r\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\r\n                    if (blobSupport) {\r\n                        return value;\r\n                    }\r\n                    return _encodeBlob(value);\r\n                });\r\n            }\r\n            return value;\r\n        }).then(function (value) {\r\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\r\n                if (err) {\r\n                    return reject(err);\r\n                }\r\n\r\n                try {\r\n                    var store = transaction.objectStore(self._dbInfo.storeName);\r\n\r\n                    // The reason we don't _save_ null is because IE 10 does\r\n                    // not support saving the `null` type in IndexedDB. How\r\n                    // ironic, given the bug below!\r\n                    // See: https://github.com/mozilla/localForage/issues/161\r\n                    if (value === null) {\r\n                        value = undefined;\r\n                    }\r\n\r\n                    var req = store.put(value, key);\r\n\r\n                    transaction.oncomplete = function () {\r\n                        // Cast to undefined so the value passed to\r\n                        // callback/promise is the same as what one would get out\r\n                        // of `getItem()` later. This leads to some weirdness\r\n                        // (setItem('foo', undefined) will return `null`), but\r\n                        // it's not my fault localStorage is our baseline and that\r\n                        // it's weird.\r\n                        if (value === undefined) {\r\n                            value = null;\r\n                        }\r\n\r\n                        resolve(value);\r\n                    };\r\n                    transaction.onabort = transaction.onerror = function () {\r\n                        var err = req.error ? req.error : req.transaction.error;\r\n                        reject(err);\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            });\r\n        })[\"catch\"](reject);\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\nfunction removeItem(key, callback) {\r\n    var self = this;\r\n\r\n    key = normalizeKey(key);\r\n\r\n    var promise = new Promise$1(function (resolve, reject) {\r\n        self.ready().then(function () {\r\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\r\n                if (err) {\r\n                    return reject(err);\r\n                }\r\n\r\n                try {\r\n                    var store = transaction.objectStore(self._dbInfo.storeName);\r\n                    // We use a Grunt task to make this safe for IE and some\r\n                    // versions of Android (including those used by Cordova).\r\n                    // Normally IE won't like `.delete()` and will insist on\r\n                    // using `['delete']()`, but we have a build step that\r\n                    // fixes this for us now.\r\n                    var req = store[\"delete\"](key);\r\n                    transaction.oncomplete = function () {\r\n                        resolve();\r\n                    };\r\n\r\n                    transaction.onerror = function () {\r\n                        reject(req.error);\r\n                    };\r\n\r\n                    // The request will be also be aborted if we've exceeded our storage\r\n                    // space.\r\n                    transaction.onabort = function () {\r\n                        var err = req.error ? req.error : req.transaction.error;\r\n                        reject(err);\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            });\r\n        })[\"catch\"](reject);\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\nfunction clear(callback) {\r\n    var self = this;\r\n\r\n    var promise = new Promise$1(function (resolve, reject) {\r\n        self.ready().then(function () {\r\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\r\n                if (err) {\r\n                    return reject(err);\r\n                }\r\n\r\n                try {\r\n                    var store = transaction.objectStore(self._dbInfo.storeName);\r\n                    var req = store.clear();\r\n\r\n                    transaction.oncomplete = function () {\r\n                        resolve();\r\n                    };\r\n\r\n                    transaction.onabort = transaction.onerror = function () {\r\n                        var err = req.error ? req.error : req.transaction.error;\r\n                        reject(err);\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            });\r\n        })[\"catch\"](reject);\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\nfunction length(callback) {\r\n    var self = this;\r\n\r\n    var promise = new Promise$1(function (resolve, reject) {\r\n        self.ready().then(function () {\r\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\r\n                if (err) {\r\n                    return reject(err);\r\n                }\r\n\r\n                try {\r\n                    var store = transaction.objectStore(self._dbInfo.storeName);\r\n                    var req = store.count();\r\n\r\n                    req.onsuccess = function () {\r\n                        resolve(req.result);\r\n                    };\r\n\r\n                    req.onerror = function () {\r\n                        reject(req.error);\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            });\r\n        })[\"catch\"](reject);\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\nfunction key(n, callback) {\r\n    var self = this;\r\n\r\n    var promise = new Promise$1(function (resolve, reject) {\r\n        if (n < 0) {\r\n            resolve(null);\r\n\r\n            return;\r\n        }\r\n\r\n        self.ready().then(function () {\r\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\r\n                if (err) {\r\n                    return reject(err);\r\n                }\r\n\r\n                try {\r\n                    var store = transaction.objectStore(self._dbInfo.storeName);\r\n                    var advanced = false;\r\n                    var req = store.openKeyCursor();\r\n\r\n                    req.onsuccess = function () {\r\n                        var cursor = req.result;\r\n                        if (!cursor) {\r\n                            // this means there weren't enough keys\r\n                            resolve(null);\r\n\r\n                            return;\r\n                        }\r\n\r\n                        if (n === 0) {\r\n                            // We have the first key, return it if that's what they\r\n                            // wanted.\r\n                            resolve(cursor.key);\r\n                        } else {\r\n                            if (!advanced) {\r\n                                // Otherwise, ask the cursor to skip ahead n\r\n                                // records.\r\n                                advanced = true;\r\n                                cursor.advance(n);\r\n                            } else {\r\n                                // When we get here, we've got the nth key.\r\n                                resolve(cursor.key);\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    req.onerror = function () {\r\n                        reject(req.error);\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            });\r\n        })[\"catch\"](reject);\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\nfunction keys(callback) {\r\n    var self = this;\r\n\r\n    var promise = new Promise$1(function (resolve, reject) {\r\n        self.ready().then(function () {\r\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\r\n                if (err) {\r\n                    return reject(err);\r\n                }\r\n\r\n                try {\r\n                    var store = transaction.objectStore(self._dbInfo.storeName);\r\n                    var req = store.openKeyCursor();\r\n                    var keys = [];\r\n\r\n                    req.onsuccess = function () {\r\n                        var cursor = req.result;\r\n\r\n                        if (!cursor) {\r\n                            resolve(keys);\r\n                            return;\r\n                        }\r\n\r\n                        keys.push(cursor.key);\r\n                        cursor[\"continue\"]();\r\n                    };\r\n\r\n                    req.onerror = function () {\r\n                        reject(req.error);\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            });\r\n        })[\"catch\"](reject);\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\nfunction dropInstance(options, callback) {\r\n    callback = getCallback.apply(this, arguments);\r\n\r\n    var currentConfig = this.config();\r\n    options = typeof options !== 'function' && options || {};\r\n    if (!options.name) {\r\n        options.name = options.name || currentConfig.name;\r\n        options.storeName = options.storeName || currentConfig.storeName;\r\n    }\r\n\r\n    var self = this;\r\n    var promise;\r\n    if (!options.name) {\r\n        promise = Promise$1.reject('Invalid arguments');\r\n    } else {\r\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\r\n\r\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\r\n            var dbContext = dbContexts[options.name];\r\n            var forages = dbContext.forages;\r\n            dbContext.db = db;\r\n            for (var i = 0; i < forages.length; i++) {\r\n                forages[i]._dbInfo.db = db;\r\n            }\r\n            return db;\r\n        });\r\n\r\n        if (!options.storeName) {\r\n            promise = dbPromise.then(function (db) {\r\n                _deferReadiness(options);\r\n\r\n                var dbContext = dbContexts[options.name];\r\n                var forages = dbContext.forages;\r\n\r\n                db.close();\r\n                for (var i = 0; i < forages.length; i++) {\r\n                    var forage = forages[i];\r\n                    forage._dbInfo.db = null;\r\n                }\r\n\r\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\r\n                    var req = idb.deleteDatabase(options.name);\r\n\r\n                    req.onerror = function () {\r\n                        var db = req.result;\r\n                        if (db) {\r\n                            db.close();\r\n                        }\r\n                        reject(req.error);\r\n                    };\r\n\r\n                    req.onblocked = function () {\r\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\r\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\r\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\r\n                    };\r\n\r\n                    req.onsuccess = function () {\r\n                        var db = req.result;\r\n                        if (db) {\r\n                            db.close();\r\n                        }\r\n                        resolve(db);\r\n                    };\r\n                });\r\n\r\n                return dropDBPromise.then(function (db) {\r\n                    dbContext.db = db;\r\n                    for (var i = 0; i < forages.length; i++) {\r\n                        var _forage = forages[i];\r\n                        _advanceReadiness(_forage._dbInfo);\r\n                    }\r\n                })[\"catch\"](function (err) {\r\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\r\n                    throw err;\r\n                });\r\n            });\r\n        } else {\r\n            promise = dbPromise.then(function (db) {\r\n                if (!db.objectStoreNames.contains(options.storeName)) {\r\n                    return;\r\n                }\r\n\r\n                var newVersion = db.version + 1;\r\n\r\n                _deferReadiness(options);\r\n\r\n                var dbContext = dbContexts[options.name];\r\n                var forages = dbContext.forages;\r\n\r\n                db.close();\r\n                for (var i = 0; i < forages.length; i++) {\r\n                    var forage = forages[i];\r\n                    forage._dbInfo.db = null;\r\n                    forage._dbInfo.version = newVersion;\r\n                }\r\n\r\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\r\n                    var req = idb.open(options.name, newVersion);\r\n\r\n                    req.onerror = function (err) {\r\n                        var db = req.result;\r\n                        db.close();\r\n                        reject(err);\r\n                    };\r\n\r\n                    req.onupgradeneeded = function () {\r\n                        var db = req.result;\r\n                        db.deleteObjectStore(options.storeName);\r\n                    };\r\n\r\n                    req.onsuccess = function () {\r\n                        var db = req.result;\r\n                        db.close();\r\n                        resolve(db);\r\n                    };\r\n                });\r\n\r\n                return dropObjectPromise.then(function (db) {\r\n                    dbContext.db = db;\r\n                    for (var j = 0; j < forages.length; j++) {\r\n                        var _forage2 = forages[j];\r\n                        _forage2._dbInfo.db = db;\r\n                        _advanceReadiness(_forage2._dbInfo);\r\n                    }\r\n                })[\"catch\"](function (err) {\r\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\r\n                    throw err;\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\nvar asyncStorage = {\r\n    _driver: 'asyncStorage',\r\n    _initStorage: _initStorage,\r\n    _support: isIndexedDBValid(),\r\n    iterate: iterate,\r\n    getItem: getItem,\r\n    setItem: setItem,\r\n    removeItem: removeItem,\r\n    clear: clear,\r\n    length: length,\r\n    key: key,\r\n    keys: keys,\r\n    dropInstance: dropInstance\r\n};\r\n\r\nfunction isWebSQLValid() {\r\n    return typeof openDatabase === 'function';\r\n}\r\n\r\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\r\n// it to Base64, so this is how we store it to prevent very strange errors with less\r\n// verbose ways of binary <-> string data storage.\r\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n\r\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\r\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\r\n\r\nvar SERIALIZED_MARKER = '__lfsc__:';\r\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\r\n\r\n// OMG the serializations!\r\nvar TYPE_ARRAYBUFFER = 'arbf';\r\nvar TYPE_BLOB = 'blob';\r\nvar TYPE_INT8ARRAY = 'si08';\r\nvar TYPE_UINT8ARRAY = 'ui08';\r\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\r\nvar TYPE_INT16ARRAY = 'si16';\r\nvar TYPE_INT32ARRAY = 'si32';\r\nvar TYPE_UINT16ARRAY = 'ur16';\r\nvar TYPE_UINT32ARRAY = 'ui32';\r\nvar TYPE_FLOAT32ARRAY = 'fl32';\r\nvar TYPE_FLOAT64ARRAY = 'fl64';\r\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\r\n\r\nvar toString$1 = Object.prototype.toString;\r\n\r\nfunction stringToBuffer(serializedString) {\r\n    // Fill the string into a ArrayBuffer.\r\n    var bufferLength = serializedString.length * 0.75;\r\n    var len = serializedString.length;\r\n    var i;\r\n    var p = 0;\r\n    var encoded1, encoded2, encoded3, encoded4;\r\n\r\n    if (serializedString[serializedString.length - 1] === '=') {\r\n        bufferLength--;\r\n        if (serializedString[serializedString.length - 2] === '=') {\r\n            bufferLength--;\r\n        }\r\n    }\r\n\r\n    var buffer = new ArrayBuffer(bufferLength);\r\n    var bytes = new Uint8Array(buffer);\r\n\r\n    for (i = 0; i < len; i += 4) {\r\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\r\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\r\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\r\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\r\n\r\n        /*jslint bitwise: true */\r\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\r\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\r\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\r\n    }\r\n    return buffer;\r\n}\r\n\r\n// Converts a buffer to a string to store, serialized, in the backend\r\n// storage library.\r\nfunction bufferToString(buffer) {\r\n    // base64-arraybuffer\r\n    var bytes = new Uint8Array(buffer);\r\n    var base64String = '';\r\n    var i;\r\n\r\n    for (i = 0; i < bytes.length; i += 3) {\r\n        /*jslint bitwise: true */\r\n        base64String += BASE_CHARS[bytes[i] >> 2];\r\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\r\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\r\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\r\n    }\r\n\r\n    if (bytes.length % 3 === 2) {\r\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\r\n    } else if (bytes.length % 3 === 1) {\r\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\r\n    }\r\n\r\n    return base64String;\r\n}\r\n\r\n// Serialize a value, afterwards executing a callback (which usually\r\n// instructs the `setItem()` callback/promise to be executed). This is how\r\n// we store binary data with localStorage.\r\nfunction serialize(value, callback) {\r\n    var valueType = '';\r\n    if (value) {\r\n        valueType = toString$1.call(value);\r\n    }\r\n\r\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\r\n    // checks fail when running the tests using casper.js...\r\n    //\r\n    // TODO: See why those tests fail and use a better solution.\r\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\r\n        // Convert binary arrays to a string and prefix the string with\r\n        // a special marker.\r\n        var buffer;\r\n        var marker = SERIALIZED_MARKER;\r\n\r\n        if (value instanceof ArrayBuffer) {\r\n            buffer = value;\r\n            marker += TYPE_ARRAYBUFFER;\r\n        } else {\r\n            buffer = value.buffer;\r\n\r\n            if (valueType === '[object Int8Array]') {\r\n                marker += TYPE_INT8ARRAY;\r\n            } else if (valueType === '[object Uint8Array]') {\r\n                marker += TYPE_UINT8ARRAY;\r\n            } else if (valueType === '[object Uint8ClampedArray]') {\r\n                marker += TYPE_UINT8CLAMPEDARRAY;\r\n            } else if (valueType === '[object Int16Array]') {\r\n                marker += TYPE_INT16ARRAY;\r\n            } else if (valueType === '[object Uint16Array]') {\r\n                marker += TYPE_UINT16ARRAY;\r\n            } else if (valueType === '[object Int32Array]') {\r\n                marker += TYPE_INT32ARRAY;\r\n            } else if (valueType === '[object Uint32Array]') {\r\n                marker += TYPE_UINT32ARRAY;\r\n            } else if (valueType === '[object Float32Array]') {\r\n                marker += TYPE_FLOAT32ARRAY;\r\n            } else if (valueType === '[object Float64Array]') {\r\n                marker += TYPE_FLOAT64ARRAY;\r\n            } else {\r\n                callback(new Error('Failed to get type for BinaryArray'));\r\n            }\r\n        }\r\n\r\n        callback(marker + bufferToString(buffer));\r\n    } else if (valueType === '[object Blob]') {\r\n        // Conver the blob to a binaryArray and then to a string.\r\n        var fileReader = new FileReader();\r\n\r\n        fileReader.onload = function () {\r\n            // Backwards-compatible prefix for the blob type.\r\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\r\n\r\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\r\n        };\r\n\r\n        fileReader.readAsArrayBuffer(value);\r\n    } else {\r\n        try {\r\n            callback(JSON.stringify(value));\r\n        } catch (e) {\r\n            console.error(\"Couldn't convert value into a JSON string: \", value);\r\n\r\n            callback(null, e);\r\n        }\r\n    }\r\n}\r\n\r\n// Deserialize data we've inserted into a value column/field. We place\r\n// special markers into our strings to mark them as encoded; this isn't\r\n// as nice as a meta field, but it's the only sane thing we can do whilst\r\n// keeping localStorage support intact.\r\n//\r\n// Oftentimes this will just deserialize JSON content, but if we have a\r\n// special marker (SERIALIZED_MARKER, defined above), we will extract\r\n// some kind of arraybuffer/binary data/typed array out of the string.\r\nfunction deserialize(value) {\r\n    // If we haven't marked this string as being specially serialized (i.e.\r\n    // something other than serialized JSON), we can just return it and be\r\n    // done with it.\r\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\r\n        return JSON.parse(value);\r\n    }\r\n\r\n    // The following code deals with deserializing some kind of Blob or\r\n    // TypedArray. First we separate out the type of data we're dealing\r\n    // with from the data itself.\r\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\r\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\r\n\r\n    var blobType;\r\n    // Backwards-compatible blob type serialization strategy.\r\n    // DBs created with older versions of localForage will simply not have the blob type.\r\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\r\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\r\n        blobType = matcher[1];\r\n        serializedString = serializedString.substring(matcher[0].length);\r\n    }\r\n    var buffer = stringToBuffer(serializedString);\r\n\r\n    // Return the right type based on the code/type set during\r\n    // serialization.\r\n    switch (type) {\r\n        case TYPE_ARRAYBUFFER:\r\n            return buffer;\r\n        case TYPE_BLOB:\r\n            return createBlob([buffer], { type: blobType });\r\n        case TYPE_INT8ARRAY:\r\n            return new Int8Array(buffer);\r\n        case TYPE_UINT8ARRAY:\r\n            return new Uint8Array(buffer);\r\n        case TYPE_UINT8CLAMPEDARRAY:\r\n            return new Uint8ClampedArray(buffer);\r\n        case TYPE_INT16ARRAY:\r\n            return new Int16Array(buffer);\r\n        case TYPE_UINT16ARRAY:\r\n            return new Uint16Array(buffer);\r\n        case TYPE_INT32ARRAY:\r\n            return new Int32Array(buffer);\r\n        case TYPE_UINT32ARRAY:\r\n            return new Uint32Array(buffer);\r\n        case TYPE_FLOAT32ARRAY:\r\n            return new Float32Array(buffer);\r\n        case TYPE_FLOAT64ARRAY:\r\n            return new Float64Array(buffer);\r\n        default:\r\n            throw new Error('Unkown type: ' + type);\r\n    }\r\n}\r\n\r\nvar localforageSerializer = {\r\n    serialize: serialize,\r\n    deserialize: deserialize,\r\n    stringToBuffer: stringToBuffer,\r\n    bufferToString: bufferToString\r\n};\r\n\r\n/*\r\n * Includes code from:\r\n *\r\n * base64-arraybuffer\r\n * https://github.com/niklasvh/base64-arraybuffer\r\n *\r\n * Copyright (c) 2012 Niklas von Hertzen\r\n * Licensed under the MIT license.\r\n */\r\n\r\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\r\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\r\n}\r\n\r\n// Open the WebSQL database (automatically creates one if one didn't\r\n// previously exist), using any options set in the config.\r\nfunction _initStorage$1(options) {\r\n    var self = this;\r\n    var dbInfo = {\r\n        db: null\r\n    };\r\n\r\n    if (options) {\r\n        for (var i in options) {\r\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\r\n        }\r\n    }\r\n\r\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\r\n        // Open the database; the openDatabase API will automatically\r\n        // create it for us if it doesn't exist.\r\n        try {\r\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\r\n        } catch (e) {\r\n            return reject(e);\r\n        }\r\n\r\n        // Create our key/value table if it doesn't exist.\r\n        dbInfo.db.transaction(function (t) {\r\n            createDbTable(t, dbInfo, function () {\r\n                self._dbInfo = dbInfo;\r\n                resolve();\r\n            }, function (t, error) {\r\n                reject(error);\r\n            });\r\n        }, reject);\r\n    });\r\n\r\n    dbInfo.serializer = localforageSerializer;\r\n    return dbInfoPromise;\r\n}\r\n\r\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\r\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\r\n        if (error.code === error.SYNTAX_ERR) {\r\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\r\n                if (!results.rows.length) {\r\n                    // if the table is missing (was deleted)\r\n                    // re-create it table and retry\r\n                    createDbTable(t, dbInfo, function () {\r\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\r\n                    }, errorCallback);\r\n                } else {\r\n                    errorCallback(t, error);\r\n                }\r\n            }, errorCallback);\r\n        } else {\r\n            errorCallback(t, error);\r\n        }\r\n    }, errorCallback);\r\n}\r\n\r\nfunction getItem$1(key, callback) {\r\n    var self = this;\r\n\r\n    key = normalizeKey(key);\r\n\r\n    var promise = new Promise$1(function (resolve, reject) {\r\n        self.ready().then(function () {\r\n            var dbInfo = self._dbInfo;\r\n            dbInfo.db.transaction(function (t) {\r\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\r\n                    var result = results.rows.length ? results.rows.item(0).value : null;\r\n\r\n                    // Check to see if this is serialized content we need to\r\n                    // unpack.\r\n                    if (result) {\r\n                        result = dbInfo.serializer.deserialize(result);\r\n                    }\r\n\r\n                    resolve(result);\r\n                }, function (t, error) {\r\n                    reject(error);\r\n                });\r\n            });\r\n        })[\"catch\"](reject);\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\nfunction iterate$1(iterator, callback) {\r\n    var self = this;\r\n\r\n    var promise = new Promise$1(function (resolve, reject) {\r\n        self.ready().then(function () {\r\n            var dbInfo = self._dbInfo;\r\n\r\n            dbInfo.db.transaction(function (t) {\r\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\r\n                    var rows = results.rows;\r\n                    var length = rows.length;\r\n\r\n                    for (var i = 0; i < length; i++) {\r\n                        var item = rows.item(i);\r\n                        var result = item.value;\r\n\r\n                        // Check to see if this is serialized content\r\n                        // we need to unpack.\r\n                        if (result) {\r\n                            result = dbInfo.serializer.deserialize(result);\r\n                        }\r\n\r\n                        result = iterator(result, item.key, i + 1);\r\n\r\n                        // void(0) prevents problems with redefinition\r\n                        // of `undefined`.\r\n                        if (result !== void 0) {\r\n                            resolve(result);\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    resolve();\r\n                }, function (t, error) {\r\n                    reject(error);\r\n                });\r\n            });\r\n        })[\"catch\"](reject);\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\nfunction _setItem(key, value, callback, retriesLeft) {\r\n    var self = this;\r\n\r\n    key = normalizeKey(key);\r\n\r\n    var promise = new Promise$1(function (resolve, reject) {\r\n        self.ready().then(function () {\r\n            // The localStorage API doesn't return undefined values in an\r\n            // \"expected\" way, so undefined is always cast to null in all\r\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\r\n            if (value === undefined) {\r\n                value = null;\r\n            }\r\n\r\n            // Save the original value to pass to the callback.\r\n            var originalValue = value;\r\n\r\n            var dbInfo = self._dbInfo;\r\n            dbInfo.serializer.serialize(value, function (value, error) {\r\n                if (error) {\r\n                    reject(error);\r\n                } else {\r\n                    dbInfo.db.transaction(function (t) {\r\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\r\n                            resolve(originalValue);\r\n                        }, function (t, error) {\r\n                            reject(error);\r\n                        });\r\n                    }, function (sqlError) {\r\n                        // The transaction failed; check\r\n                        // to see if it's a quota error.\r\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\r\n                            // We reject the callback outright for now, but\r\n                            // it's worth trying to re-run the transaction.\r\n                            // Even if the user accepts the prompt to use\r\n                            // more storage on Safari, this error will\r\n                            // be called.\r\n                            //\r\n                            // Try to re-run the transaction.\r\n                            if (retriesLeft > 0) {\r\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\r\n                                return;\r\n                            }\r\n                            reject(sqlError);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        })[\"catch\"](reject);\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\nfunction setItem$1(key, value, callback) {\r\n    return _setItem.apply(this, [key, value, callback, 1]);\r\n}\r\n\r\nfunction removeItem$1(key, callback) {\r\n    var self = this;\r\n\r\n    key = normalizeKey(key);\r\n\r\n    var promise = new Promise$1(function (resolve, reject) {\r\n        self.ready().then(function () {\r\n            var dbInfo = self._dbInfo;\r\n            dbInfo.db.transaction(function (t) {\r\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\r\n                    resolve();\r\n                }, function (t, error) {\r\n                    reject(error);\r\n                });\r\n            });\r\n        })[\"catch\"](reject);\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\n// Deletes every item in the table.\r\n// TODO: Find out if this resets the AUTO_INCREMENT number.\r\nfunction clear$1(callback) {\r\n    var self = this;\r\n\r\n    var promise = new Promise$1(function (resolve, reject) {\r\n        self.ready().then(function () {\r\n            var dbInfo = self._dbInfo;\r\n            dbInfo.db.transaction(function (t) {\r\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\r\n                    resolve();\r\n                }, function (t, error) {\r\n                    reject(error);\r\n                });\r\n            });\r\n        })[\"catch\"](reject);\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\n// Does a simple `COUNT(key)` to get the number of items stored in\r\n// localForage.\r\nfunction length$1(callback) {\r\n    var self = this;\r\n\r\n    var promise = new Promise$1(function (resolve, reject) {\r\n        self.ready().then(function () {\r\n            var dbInfo = self._dbInfo;\r\n            dbInfo.db.transaction(function (t) {\r\n                // Ahhh, SQL makes this one soooooo easy.\r\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\r\n                    var result = results.rows.item(0).c;\r\n                    resolve(result);\r\n                }, function (t, error) {\r\n                    reject(error);\r\n                });\r\n            });\r\n        })[\"catch\"](reject);\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\n// Return the key located at key index X; essentially gets the key from a\r\n// `WHERE id = ?`. This is the most efficient way I can think to implement\r\n// this rarely-used (in my experience) part of the API, but it can seem\r\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\r\n// the ID of each key will change every time it's updated. Perhaps a stored\r\n// procedure for the `setItem()` SQL would solve this problem?\r\n// TODO: Don't change ID on `setItem()`.\r\nfunction key$1(n, callback) {\r\n    var self = this;\r\n\r\n    var promise = new Promise$1(function (resolve, reject) {\r\n        self.ready().then(function () {\r\n            var dbInfo = self._dbInfo;\r\n            dbInfo.db.transaction(function (t) {\r\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\r\n                    var result = results.rows.length ? results.rows.item(0).key : null;\r\n                    resolve(result);\r\n                }, function (t, error) {\r\n                    reject(error);\r\n                });\r\n            });\r\n        })[\"catch\"](reject);\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\nfunction keys$1(callback) {\r\n    var self = this;\r\n\r\n    var promise = new Promise$1(function (resolve, reject) {\r\n        self.ready().then(function () {\r\n            var dbInfo = self._dbInfo;\r\n            dbInfo.db.transaction(function (t) {\r\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\r\n                    var keys = [];\r\n\r\n                    for (var i = 0; i < results.rows.length; i++) {\r\n                        keys.push(results.rows.item(i).key);\r\n                    }\r\n\r\n                    resolve(keys);\r\n                }, function (t, error) {\r\n                    reject(error);\r\n                });\r\n            });\r\n        })[\"catch\"](reject);\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\n// https://www.w3.org/TR/webdatabase/#databases\r\n// > There is no way to enumerate or delete the databases available for an origin from this API.\r\nfunction getAllStoreNames(db) {\r\n    return new Promise$1(function (resolve, reject) {\r\n        db.transaction(function (t) {\r\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\r\n                var storeNames = [];\r\n\r\n                for (var i = 0; i < results.rows.length; i++) {\r\n                    storeNames.push(results.rows.item(i).name);\r\n                }\r\n\r\n                resolve({\r\n                    db: db,\r\n                    storeNames: storeNames\r\n                });\r\n            }, function (t, error) {\r\n                reject(error);\r\n            });\r\n        }, function (sqlError) {\r\n            reject(sqlError);\r\n        });\r\n    });\r\n}\r\n\r\nfunction dropInstance$1(options, callback) {\r\n    callback = getCallback.apply(this, arguments);\r\n\r\n    var currentConfig = this.config();\r\n    options = typeof options !== 'function' && options || {};\r\n    if (!options.name) {\r\n        options.name = options.name || currentConfig.name;\r\n        options.storeName = options.storeName || currentConfig.storeName;\r\n    }\r\n\r\n    var self = this;\r\n    var promise;\r\n    if (!options.name) {\r\n        promise = Promise$1.reject('Invalid arguments');\r\n    } else {\r\n        promise = new Promise$1(function (resolve) {\r\n            var db;\r\n            if (options.name === currentConfig.name) {\r\n                // use the db reference of the current instance\r\n                db = self._dbInfo.db;\r\n            } else {\r\n                db = openDatabase(options.name, '', '', 0);\r\n            }\r\n\r\n            if (!options.storeName) {\r\n                // drop all database tables\r\n                resolve(getAllStoreNames(db));\r\n            } else {\r\n                resolve({\r\n                    db: db,\r\n                    storeNames: [options.storeName]\r\n                });\r\n            }\r\n        }).then(function (operationInfo) {\r\n            return new Promise$1(function (resolve, reject) {\r\n                operationInfo.db.transaction(function (t) {\r\n                    function dropTable(storeName) {\r\n                        return new Promise$1(function (resolve, reject) {\r\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\r\n                                resolve();\r\n                            }, function (t, error) {\r\n                                reject(error);\r\n                            });\r\n                        });\r\n                    }\r\n\r\n                    var operations = [];\r\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\r\n                        operations.push(dropTable(operationInfo.storeNames[i]));\r\n                    }\r\n\r\n                    Promise$1.all(operations).then(function () {\r\n                        resolve();\r\n                    })[\"catch\"](function (e) {\r\n                        reject(e);\r\n                    });\r\n                }, function (sqlError) {\r\n                    reject(sqlError);\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\nvar webSQLStorage = {\r\n    _driver: 'webSQLStorage',\r\n    _initStorage: _initStorage$1,\r\n    _support: isWebSQLValid(),\r\n    iterate: iterate$1,\r\n    getItem: getItem$1,\r\n    setItem: setItem$1,\r\n    removeItem: removeItem$1,\r\n    clear: clear$1,\r\n    length: length$1,\r\n    key: key$1,\r\n    keys: keys$1,\r\n    dropInstance: dropInstance$1\r\n};\r\n\r\nfunction isLocalStorageValid() {\r\n    try {\r\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\r\n        // in IE8 typeof localStorage.setItem === 'object'\r\n        !!localStorage.setItem;\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction _getKeyPrefix(options, defaultConfig) {\r\n    var keyPrefix = options.name + '/';\r\n\r\n    if (options.storeName !== defaultConfig.storeName) {\r\n        keyPrefix += options.storeName + '/';\r\n    }\r\n    return keyPrefix;\r\n}\r\n\r\n// Check if localStorage throws when saving an item\r\nfunction checkIfLocalStorageThrows() {\r\n    var localStorageTestKey = '_localforage_support_test';\r\n\r\n    try {\r\n        localStorage.setItem(localStorageTestKey, true);\r\n        localStorage.removeItem(localStorageTestKey);\r\n\r\n        return false;\r\n    } catch (e) {\r\n        return true;\r\n    }\r\n}\r\n\r\n// Check if localStorage is usable and allows to save an item\r\n// This method checks if localStorage is usable in Safari Private Browsing\r\n// mode, or in any other case where the available quota for localStorage\r\n// is 0 and there wasn't any saved items yet.\r\nfunction _isLocalStorageUsable() {\r\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\r\n}\r\n\r\n// Config the localStorage backend, using options set in the config.\r\nfunction _initStorage$2(options) {\r\n    var self = this;\r\n    var dbInfo = {};\r\n    if (options) {\r\n        for (var i in options) {\r\n            dbInfo[i] = options[i];\r\n        }\r\n    }\r\n\r\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\r\n\r\n    if (!_isLocalStorageUsable()) {\r\n        return Promise$1.reject();\r\n    }\r\n\r\n    self._dbInfo = dbInfo;\r\n    dbInfo.serializer = localforageSerializer;\r\n\r\n    return Promise$1.resolve();\r\n}\r\n\r\n// Remove all keys from the datastore, effectively destroying all data in\r\n// the app's key/value store!\r\nfunction clear$2(callback) {\r\n    var self = this;\r\n    var promise = self.ready().then(function () {\r\n        var keyPrefix = self._dbInfo.keyPrefix;\r\n\r\n        for (var i = localStorage.length - 1; i >= 0; i--) {\r\n            var key = localStorage.key(i);\r\n\r\n            if (key.indexOf(keyPrefix) === 0) {\r\n                localStorage.removeItem(key);\r\n            }\r\n        }\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\n// Retrieve an item from the store. Unlike the original async_storage\r\n// library in Gaia, we don't modify return values at all. If a key's value\r\n// is `undefined`, we pass that value to the callback function.\r\nfunction getItem$2(key, callback) {\r\n    var self = this;\r\n\r\n    key = normalizeKey(key);\r\n\r\n    var promise = self.ready().then(function () {\r\n        var dbInfo = self._dbInfo;\r\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\r\n\r\n        // If a result was found, parse it from the serialized\r\n        // string into a JS object. If result isn't truthy, the key\r\n        // is likely undefined and we'll pass it straight to the\r\n        // callback.\r\n        if (result) {\r\n            result = dbInfo.serializer.deserialize(result);\r\n        }\r\n\r\n        return result;\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\n// Iterate over all items in the store.\r\nfunction iterate$2(iterator, callback) {\r\n    var self = this;\r\n\r\n    var promise = self.ready().then(function () {\r\n        var dbInfo = self._dbInfo;\r\n        var keyPrefix = dbInfo.keyPrefix;\r\n        var keyPrefixLength = keyPrefix.length;\r\n        var length = localStorage.length;\r\n\r\n        // We use a dedicated iterator instead of the `i` variable below\r\n        // so other keys we fetch in localStorage aren't counted in\r\n        // the `iterationNumber` argument passed to the `iterate()`\r\n        // callback.\r\n        //\r\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\r\n        var iterationNumber = 1;\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            var key = localStorage.key(i);\r\n            if (key.indexOf(keyPrefix) !== 0) {\r\n                continue;\r\n            }\r\n            var value = localStorage.getItem(key);\r\n\r\n            // If a result was found, parse it from the serialized\r\n            // string into a JS object. If result isn't truthy, the\r\n            // key is likely undefined and we'll pass it straight\r\n            // to the iterator.\r\n            if (value) {\r\n                value = dbInfo.serializer.deserialize(value);\r\n            }\r\n\r\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\r\n\r\n            if (value !== void 0) {\r\n                return value;\r\n            }\r\n        }\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\n// Same as localStorage's key() method, except takes a callback.\r\nfunction key$2(n, callback) {\r\n    var self = this;\r\n    var promise = self.ready().then(function () {\r\n        var dbInfo = self._dbInfo;\r\n        var result;\r\n        try {\r\n            result = localStorage.key(n);\r\n        } catch (error) {\r\n            result = null;\r\n        }\r\n\r\n        // Remove the prefix from the key, if a key is found.\r\n        if (result) {\r\n            result = result.substring(dbInfo.keyPrefix.length);\r\n        }\r\n\r\n        return result;\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\nfunction keys$2(callback) {\r\n    var self = this;\r\n    var promise = self.ready().then(function () {\r\n        var dbInfo = self._dbInfo;\r\n        var length = localStorage.length;\r\n        var keys = [];\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            var itemKey = localStorage.key(i);\r\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\r\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\r\n            }\r\n        }\r\n\r\n        return keys;\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\n// Supply the number of keys in the datastore to the callback function.\r\nfunction length$2(callback) {\r\n    var self = this;\r\n    var promise = self.keys().then(function (keys) {\r\n        return keys.length;\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\n// Remove an item from the store, nice and simple.\r\nfunction removeItem$2(key, callback) {\r\n    var self = this;\r\n\r\n    key = normalizeKey(key);\r\n\r\n    var promise = self.ready().then(function () {\r\n        var dbInfo = self._dbInfo;\r\n        localStorage.removeItem(dbInfo.keyPrefix + key);\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\n// Set a key's value and run an optional callback once the value is set.\r\n// Unlike Gaia's implementation, the callback function is passed the value,\r\n// in case you want to operate on that value only after you're sure it\r\n// saved, or something like that.\r\nfunction setItem$2(key, value, callback) {\r\n    var self = this;\r\n\r\n    key = normalizeKey(key);\r\n\r\n    var promise = self.ready().then(function () {\r\n        // Convert undefined values to null.\r\n        // https://github.com/mozilla/localForage/pull/42\r\n        if (value === undefined) {\r\n            value = null;\r\n        }\r\n\r\n        // Save the original value to pass to the callback.\r\n        var originalValue = value;\r\n\r\n        return new Promise$1(function (resolve, reject) {\r\n            var dbInfo = self._dbInfo;\r\n            dbInfo.serializer.serialize(value, function (value, error) {\r\n                if (error) {\r\n                    reject(error);\r\n                } else {\r\n                    try {\r\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\r\n                        resolve(originalValue);\r\n                    } catch (e) {\r\n                        // localStorage capacity exceeded.\r\n                        // TODO: Make this a specific error/event.\r\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\r\n                            reject(e);\r\n                        }\r\n                        reject(e);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    });\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\nfunction dropInstance$2(options, callback) {\r\n    callback = getCallback.apply(this, arguments);\r\n\r\n    options = typeof options !== 'function' && options || {};\r\n    if (!options.name) {\r\n        var currentConfig = this.config();\r\n        options.name = options.name || currentConfig.name;\r\n        options.storeName = options.storeName || currentConfig.storeName;\r\n    }\r\n\r\n    var self = this;\r\n    var promise;\r\n    if (!options.name) {\r\n        promise = Promise$1.reject('Invalid arguments');\r\n    } else {\r\n        promise = new Promise$1(function (resolve) {\r\n            if (!options.storeName) {\r\n                resolve(options.name + '/');\r\n            } else {\r\n                resolve(_getKeyPrefix(options, self._defaultConfig));\r\n            }\r\n        }).then(function (keyPrefix) {\r\n            for (var i = localStorage.length - 1; i >= 0; i--) {\r\n                var key = localStorage.key(i);\r\n\r\n                if (key.indexOf(keyPrefix) === 0) {\r\n                    localStorage.removeItem(key);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    executeCallback(promise, callback);\r\n    return promise;\r\n}\r\n\r\nvar localStorageWrapper = {\r\n    _driver: 'localStorageWrapper',\r\n    _initStorage: _initStorage$2,\r\n    _support: isLocalStorageValid(),\r\n    iterate: iterate$2,\r\n    getItem: getItem$2,\r\n    setItem: setItem$2,\r\n    removeItem: removeItem$2,\r\n    clear: clear$2,\r\n    length: length$2,\r\n    key: key$2,\r\n    keys: keys$2,\r\n    dropInstance: dropInstance$2\r\n};\r\n\r\nvar sameValue = function sameValue(x, y) {\r\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\r\n};\r\n\r\nvar includes = function includes(array, searchElement) {\r\n    var len = array.length;\r\n    var i = 0;\r\n    while (i < len) {\r\n        if (sameValue(array[i], searchElement)) {\r\n            return true;\r\n        }\r\n        i++;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nvar isArray = Array.isArray || function (arg) {\r\n    return Object.prototype.toString.call(arg) === '[object Array]';\r\n};\r\n\r\n// Drivers are stored here when `defineDriver()` is called.\r\n// They are shared across all instances of localForage.\r\nvar DefinedDrivers = {};\r\n\r\nvar DriverSupport = {};\r\n\r\nvar DefaultDrivers = {\r\n    INDEXEDDB: asyncStorage,\r\n    WEBSQL: webSQLStorage,\r\n    LOCALSTORAGE: localStorageWrapper\r\n};\r\n\r\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\r\n\r\nvar OptionalDriverMethods = ['dropInstance'];\r\n\r\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\r\n\r\nvar DefaultConfig = {\r\n    description: '',\r\n    driver: DefaultDriverOrder.slice(),\r\n    name: 'localforage',\r\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\r\n    // we can use without a prompt.\r\n    size: 4980736,\r\n    storeName: 'keyvaluepairs',\r\n    version: 1.0\r\n};\r\n\r\nfunction callWhenReady(localForageInstance, libraryMethod) {\r\n    localForageInstance[libraryMethod] = function () {\r\n        var _args = arguments;\r\n        return localForageInstance.ready().then(function () {\r\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\r\n        });\r\n    };\r\n}\r\n\r\nfunction extend() {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n        var arg = arguments[i];\r\n\r\n        if (arg) {\r\n            for (var _key in arg) {\r\n                if (arg.hasOwnProperty(_key)) {\r\n                    if (isArray(arg[_key])) {\r\n                        arguments[0][_key] = arg[_key].slice();\r\n                    } else {\r\n                        arguments[0][_key] = arg[_key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return arguments[0];\r\n}\r\n\r\nvar LocalForage = function () {\r\n    function LocalForage(options) {\r\n        _classCallCheck(this, LocalForage);\r\n\r\n        for (var driverTypeKey in DefaultDrivers) {\r\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\r\n                var driver = DefaultDrivers[driverTypeKey];\r\n                var driverName = driver._driver;\r\n                this[driverTypeKey] = driverName;\r\n\r\n                if (!DefinedDrivers[driverName]) {\r\n                    // we don't need to wait for the promise,\r\n                    // since the default drivers can be defined\r\n                    // in a blocking manner\r\n                    this.defineDriver(driver);\r\n                }\r\n            }\r\n        }\r\n\r\n        this._defaultConfig = extend({}, DefaultConfig);\r\n        this._config = extend({}, this._defaultConfig, options);\r\n        this._driverSet = null;\r\n        this._initDriver = null;\r\n        this._ready = false;\r\n        this._dbInfo = null;\r\n\r\n        this._wrapLibraryMethodsWithReady();\r\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\r\n    }\r\n\r\n    // Set any config values for localForage; can be called anytime before\r\n    // the first API call (e.g. `getItem`, `setItem`).\r\n    // We loop through options so we don't overwrite existing config\r\n    // values.\r\n\r\n\r\n    LocalForage.prototype.config = function config(options) {\r\n        // If the options argument is an object, we use it to set values.\r\n        // Otherwise, we return either a specified config value or all\r\n        // config values.\r\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\r\n            // If localforage is ready and fully initialized, we can't set\r\n            // any new configuration values. Instead, we return an error.\r\n            if (this._ready) {\r\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\r\n            }\r\n\r\n            for (var i in options) {\r\n                if (i === 'storeName') {\r\n                    options[i] = options[i].replace(/\\W/g, '_');\r\n                }\r\n\r\n                if (i === 'version' && typeof options[i] !== 'number') {\r\n                    return new Error('Database version must be a number.');\r\n                }\r\n\r\n                this._config[i] = options[i];\r\n            }\r\n\r\n            // after all config options are set and\r\n            // the driver option is used, try setting it\r\n            if ('driver' in options && options.driver) {\r\n                return this.setDriver(this._config.driver);\r\n            }\r\n\r\n            return true;\r\n        } else if (typeof options === 'string') {\r\n            return this._config[options];\r\n        } else {\r\n            return this._config;\r\n        }\r\n    };\r\n\r\n    // Used to define a custom driver, shared across all instances of\r\n    // localForage.\r\n\r\n\r\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\r\n        var promise = new Promise$1(function (resolve, reject) {\r\n            try {\r\n                var driverName = driverObject._driver;\r\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\r\n\r\n                // A driver name should be defined and not overlap with the\r\n                // library-defined, default drivers.\r\n                if (!driverObject._driver) {\r\n                    reject(complianceError);\r\n                    return;\r\n                }\r\n\r\n                var driverMethods = LibraryMethods.concat('_initStorage');\r\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\r\n                    var driverMethodName = driverMethods[i];\r\n\r\n                    // when the property is there,\r\n                    // it should be a method even when optional\r\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\r\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\r\n                        reject(complianceError);\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                var configureMissingMethods = function configureMissingMethods() {\r\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\r\n                        return function () {\r\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\r\n                            var promise = Promise$1.reject(error);\r\n                            executeCallback(promise, arguments[arguments.length - 1]);\r\n                            return promise;\r\n                        };\r\n                    };\r\n\r\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\r\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\r\n                        if (!driverObject[optionalDriverMethod]) {\r\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                configureMissingMethods();\r\n\r\n                var setDriverSupport = function setDriverSupport(support) {\r\n                    if (DefinedDrivers[driverName]) {\r\n                        console.info('Redefining LocalForage driver: ' + driverName);\r\n                    }\r\n                    DefinedDrivers[driverName] = driverObject;\r\n                    DriverSupport[driverName] = support;\r\n                    // don't use a then, so that we can define\r\n                    // drivers that have simple _support methods\r\n                    // in a blocking manner\r\n                    resolve();\r\n                };\r\n\r\n                if ('_support' in driverObject) {\r\n                    if (driverObject._support && typeof driverObject._support === 'function') {\r\n                        driverObject._support().then(setDriverSupport, reject);\r\n                    } else {\r\n                        setDriverSupport(!!driverObject._support);\r\n                    }\r\n                } else {\r\n                    setDriverSupport(true);\r\n                }\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n\r\n        executeTwoCallbacks(promise, callback, errorCallback);\r\n        return promise;\r\n    };\r\n\r\n    LocalForage.prototype.driver = function driver() {\r\n        return this._driver || null;\r\n    };\r\n\r\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\r\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\r\n\r\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\r\n        return getDriverPromise;\r\n    };\r\n\r\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\r\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\r\n        executeTwoCallbacks(serializerPromise, callback);\r\n        return serializerPromise;\r\n    };\r\n\r\n    LocalForage.prototype.ready = function ready(callback) {\r\n        var self = this;\r\n\r\n        var promise = self._driverSet.then(function () {\r\n            if (self._ready === null) {\r\n                self._ready = self._initDriver();\r\n            }\r\n\r\n            return self._ready;\r\n        });\r\n\r\n        executeTwoCallbacks(promise, callback, callback);\r\n        return promise;\r\n    };\r\n\r\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\r\n        var self = this;\r\n\r\n        if (!isArray(drivers)) {\r\n            drivers = [drivers];\r\n        }\r\n\r\n        var supportedDrivers = this._getSupportedDrivers(drivers);\r\n\r\n        function setDriverToConfig() {\r\n            self._config.driver = self.driver();\r\n        }\r\n\r\n        function extendSelfWithDriver(driver) {\r\n            self._extend(driver);\r\n            setDriverToConfig();\r\n\r\n            self._ready = self._initStorage(self._config);\r\n            return self._ready;\r\n        }\r\n\r\n        function initDriver(supportedDrivers) {\r\n            return function () {\r\n                var currentDriverIndex = 0;\r\n\r\n                function driverPromiseLoop() {\r\n                    while (currentDriverIndex < supportedDrivers.length) {\r\n                        var driverName = supportedDrivers[currentDriverIndex];\r\n                        currentDriverIndex++;\r\n\r\n                        self._dbInfo = null;\r\n                        self._ready = null;\r\n\r\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\r\n                    }\r\n\r\n                    setDriverToConfig();\r\n                    var error = new Error('No available storage method found.');\r\n                    self._driverSet = Promise$1.reject(error);\r\n                    return self._driverSet;\r\n                }\r\n\r\n                return driverPromiseLoop();\r\n            };\r\n        }\r\n\r\n        // There might be a driver initialization in progress\r\n        // so wait for it to finish in order to avoid a possible\r\n        // race condition to set _dbInfo\r\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\r\n            return Promise$1.resolve();\r\n        }) : Promise$1.resolve();\r\n\r\n        this._driverSet = oldDriverSetDone.then(function () {\r\n            var driverName = supportedDrivers[0];\r\n            self._dbInfo = null;\r\n            self._ready = null;\r\n\r\n            return self.getDriver(driverName).then(function (driver) {\r\n                self._driver = driver._driver;\r\n                setDriverToConfig();\r\n                self._wrapLibraryMethodsWithReady();\r\n                self._initDriver = initDriver(supportedDrivers);\r\n            });\r\n        })[\"catch\"](function () {\r\n            setDriverToConfig();\r\n            var error = new Error('No available storage method found.');\r\n            self._driverSet = Promise$1.reject(error);\r\n            return self._driverSet;\r\n        });\r\n\r\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\r\n        return this._driverSet;\r\n    };\r\n\r\n    LocalForage.prototype.supports = function supports(driverName) {\r\n        return !!DriverSupport[driverName];\r\n    };\r\n\r\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\r\n        extend(this, libraryMethodsAndProperties);\r\n    };\r\n\r\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\r\n        var supportedDrivers = [];\r\n        for (var i = 0, len = drivers.length; i < len; i++) {\r\n            var driverName = drivers[i];\r\n            if (this.supports(driverName)) {\r\n                supportedDrivers.push(driverName);\r\n            }\r\n        }\r\n        return supportedDrivers;\r\n    };\r\n\r\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\r\n        // Add a stub for each driver API method that delays the call to the\r\n        // corresponding driver method until localForage is ready. These stubs\r\n        // will be replaced by the driver methods as soon as the driver is\r\n        // loaded, so there is no performance impact.\r\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\r\n            callWhenReady(this, LibraryMethods[i]);\r\n        }\r\n    };\r\n\r\n    LocalForage.prototype.createInstance = function createInstance(options) {\r\n        return new LocalForage(options);\r\n    };\r\n\r\n    return LocalForage;\r\n}();\r\n\r\n// The actual localForage object that we expose as a module or via a\r\n// global. It's extended by pulling in one of our other libraries.\r\n\r\n\r\nvar localforage_js = new LocalForage();\r\n\r\nmodule.exports = localforage_js;\r\n\r\n},{\"3\":3}]},{},[4])(4)\r\n});\r\n"],
  "mappings": "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",
  "names": ["define", "module", "exports", "o", "e", "n", "global", "Promise", "self", "i", "key", "length", "idb", "forage", "value", "err", "keys", "db", "t", "error", "resolve", "reject", "sameValue", "includes", "LocalForage", "configureMissingMethods", "methodNotImplementedFactory", "promise", "setDriverSupport", "supportedDrivers"]
}
